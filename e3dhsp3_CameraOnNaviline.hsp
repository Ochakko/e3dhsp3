	
;	カメラ制御の　サンプル



;このサンプルは、カメラの制御の方法を示すことを目的に作りました。
;カメラをナビラインに沿って動かしたり、向きたい向きに向けたりすることが出来ます。


;まず、このサンプルを読む前に、次のことを、理解しておいてください。

;カメラの操作方法は、３種類あります。
;１，E3DSetCameraPos と、E3DSetCameraDeg を組で使用する方法と、
;２，E3DSetCameraPos と、E3DSetCameraTargetを組で使用する方法と、
;３，E3DSetCameraPos、E3DCameraLookAt、E3DCameraOnNaviLine、E3DCameraDirUp、E3DCameraDirDown、E3DCameraDirRight、E3DCameraDirLeft
;を組で、使用する方法です。
;それぞれ、他の方法と混ぜて使用することは、想定していません。
;
;このサンプルでは、３番目の方法を使用することにします。
;
;
;さて、さんぷるの説明です。
;このサンプルは、setdirflag の値が、０か１かによって、２種類の動作をします。
;
;setdirflagが１のときは、カメラは、ナビラインの上を移動しながら、移動している方向を向くように制御されます。
;キーを押しても、反応しません。

;setdirflagが０のときは、カメラは、ナビライン上を移動しますが、向きは変わりません。
;そのかわり、矢印キーを押すことで、角度の計算をせずに、向きたい方向に、すこしずつ、向きを変えることが出来ます。
;
;カメラを制御している関数は、MoveCamera関数です。
;
;FPSは、６０以上出ないようにしてあります。（Shift + F キーで解除できます）
;
;




#include "e3dhsp3.as"

#module
#deffunc waitbyfps int p1, var fps
	E3DWaitbyFPS@ p1, fps
	await 0
	return
#global


	;E3DCameraOnNaviLine用の変数
	targetpid4 = 0
	movestep = 200.0
	offsety = 1000.0
	setdirflag = 1
	;setdirflag = 0


	
	dim keybuf, 256	

	;file のpath 用のバッファーの作成
	pathlen = 2048
	sdim mediadir, pathlen
	mediadir = dir_cur + "\\Media"
	sdim pathbuf, pathlen, 4
	

	mapsize = 150000.0
	mapdiv = 50

	mapheight = 10000.0

	chgdegx = 0.0 : chkdegy = 0.0 : chkdegz = 0.0

	screenw = 640 : screenh = 480
	;screenw = 420 : screenh = 340
	screen 0, screenw, screenh, 1
	pointmax = 100

	title "Camera On NaviLine"

	;初期化
	E3DEnableDbgFile
	E3DInit 0, -1, 0, 16, 0, scid1

	;カメラの初期化
	camposx = 117424.0 : camposy = 7000.0 : camposz = 44745.0	
	E3DSetCameraPos camposx, camposy, camposz	
	camdegxz = 180.0 : camdegy = 0.0
	E3DSetCameraDeg camdegxz, camdegy

	confflag = 0
	endflag = 0


	;projectionの変更をしたいときは、以下の２行を有効にしてください。
	proj_near = 100.0 : proj_far = 50000.0 : proj_fov = 60.0
	E3DSetProjection proj_near, proj_far, proj_fov


	E3DCreateProgressBar
	E3DSetProgressBar 30

	
	; 地面データのロード

	pathbuf.0 = mediadir + "\\test_course_01.mqo"
	E3DLoadMQOFileAsGround pathbuf.0, 100.0, hsid0
	E3DSetPos hsid0, 0.0, 0.0, 0.0	
	frameno0 = 0

	E3DSetProgressBar 60
	
	
	; 走行ラインの読み込み
	gosub *LoadNaviLine ;　別ファイル、naviline0.as の関数です。


; 表示用のラインの作成とセット
	pointnum = 117
	maxpointnum = pointnum + 10
	ddim pointpos, pointnum, 3

		; ナビポイントの座標を、ライン中のポイントの座標にコピーする。
	curnpno = -1
	nextnpno = 0
	setno = 0
	firstpno = 0
	while nextnpno >= 0
		E3DGetNextNaviPoint nlid0, curnpno, nextnpno
		if ( nextnpno >= 0 ) {
			E3DGetNaviPointPos nlid0, nextnpno, npx, npy, npz
			pointpos.setno.0 = npx
			pointpos.setno.1 = npy + 500.0 ; 地面に線がもぐらないように、上にずらす
			pointpos.setno.2 = npz

			if setno == 0 : firstpno = nextnpno
			setno++
		}
		curnpno = nextnpno
	wend

	E3DCreateLine pointpos, pointnum, maxpointnum, 3, lineid


	; lineにpointを追加するテスト（最終ポイントから最初のポイントの間に線を引いてみる）
	ddim firstpos, 3
	E3DGetPointPosOfLine lineid, firstpno, firstpos	
	E3DAddPoint2Line lineid, -1, newpid
	E3DSetPointPosOfLine lineid, newpid, firstpos


	; pointを削除するテスト
	;E3DDeletePointOfLine lineid, firstpno



	; lineに色を付ける
	E3DSetLineColor lineid, 255, 0, 255, 0


;/////////////////	
	
	testfps = 0

	lightdirx1 = 0.0
	lightdiry1 = -1.0
	lightdirz1 = 2.0
	lightr1 = 255
	lightg1 = 255
	lightb1 = 255

	E3DCreateLight lid1
	E3DSetDirectionalLight lid1, lightdirx1, lightdiry1, lightdirz1, lightr1, lightg1, lightb1

	E3DSetLightAmbient lid1, 77, 77, 77
	E3DSetLightSpecular lid1, 0, 0, 0

	chkfps1 = 0

	pathbuf.0 = mediadir + "\\lake.bmp"
	pathbuf.1 = mediadir + "\\cloud3.bmp"
	E3DCreateBG scid1, pathbuf.0, pathbuf.1, 0.001, 0.0, 0

	E3DDestroyProgressBar

	dim arfps, 50

	maxfps = 60
	befshiftF = 0
	curshiftF = 0

*main
	; keybuf変数は、メインループの外で、dim keybuf, 256 として、確保しておいてください。
	E3DGetKeyboardState keybuf

	if keybuf.VK_ESCAPE = 1 : goto *bye ; [ESC]で終了

	gosub *ChangeFPS
	gosub *MoveCamera

	E3DBeginScene scid1
	
	E3DChkInView scid1, hsid0


		;不透明部分の描画をする
	E3DRender scid1, hsid0, 0, frameno0, 0
	E3DRender scid1, lineid, 0, 0, 0


		;半透明部分の描画をする
	E3DRender scid1, hsid0, 1, frameno0, 0


	gosub *DrawText


	E3DEndScene

	E3DPresent scid1
		
	waitbyfps maxfps, chkfps1

	arno = 0
	repeat 49
		befno = 48 - arno
		aftno = 49 - arno
		arfps.aftno = arfps.befno
		arno++
	loop	
	arfps.0 = chkfps1
	
	goto *main

#include "naviline0.as"

*bye
	E3DDestroyBG

	E3DDestroyLight lid1

	E3DBye
	end

*MoveCamera
	dummytpid = -1

	E3DCameraOnNaviLine nlid0, setdirflag, 1, 0, 0.0, offsety, 0.0, movestep, 30, 0, targetpid4

	if ( setdirflag == 0 ) {
		
		if ( keybuf.'X' == 1 ) {
			;Ｘを押し続けると、X軸の方向を向きます
			E3DCameraLookAt 1.0, 0.0, 0.0, 0, 10
		}
		else {
			camdegstep = 10
			degdivnum = 10
			if ( keybuf.VK_UP == 1 ) {
				E3DCameraDirUp camdegstep, degdivnum
			}
			if ( keybuf.VK_DOWN == 1 ) {
				E3DCameraDirDown camdegstep, degdivnum 
			}
			if ( keybuf.VK_RIGHT == 1 ) {
				E3DCameraDirRight camdegstep, degdivnum
			}
			if ( keybuf.VK_LEFT == 1 ) {
				E3DCameraDirLeft camdegstep, degdivnum
			}
		}
	}

	return


*ChangeFPS

	curshiftF = 0
	if ( (keybuf.VK_SHIFT = 1) & (keybuf.'F' = 1) ) {
		curshiftF = 1
	}

	if ( ( curshiftF = 0 ) & ( befshiftF = 1 ) ) {
		if ( maxfps = 60 ) {
			maxfps = 500
		}
		else {
			maxfps = 60
		} 
	}

	befshiftF = curshiftF

	return

*DrawText

	textr = 0 : textg = 255 : textb = 0
	textscale = 1

	lcnt = 0
	avfps = 0
	repeat 50
		avfps += arfps.lcnt
		lcnt++
	loop
	avfps = avfps / 50

	textposx = 10 : textposy = 20
	strchk2 = "avfps   " + avfps
	E3DDrawText textposx, textposy, textscale, textr, textg, textb, strchk2

	
	E3DGetNaviPointPos nlid0, targetpid4, tpx, tpy, tpz
	textposx = 10 : textposy = 60
	strchk4 = "targetpid4 " + targetpid4 + " x " + tpx + " y " + tpy + " z " + tpz
	E3DDrawText textposx, textposy, textscale, textr, textg, textb, strchk4


	E3DGetCameraPos cposx, cposy, cposz
	textposx = 10 : textposy = 80
	strchk5 = "camerapos , X : " + cposx + " Y: " + cposy + " Z: " + cposz
	E3DDrawText textposx, textposy, textscale, textr, textg, textb, strchk5


	textposx = 10 : textposy = 120
	strchk6 = "dummytpid " + dummytpid
	E3DDrawText textposx, textposy, textscale, textr, textg, textb, strchk6

	if( dummytpid >= 0 ) {
		E3DGetNaviPointPos nlid0, dummytpid, dtpx, dtpy, dtpz
		textposx = 10 : textposy = 140
		strchk7 = " dtpx " + dtpx + " dtpy " + dtpy + " dptz " + dtpz
		E3DDrawText textposx, textposy, textscale, textr, textg, textb, strchk7
	}

	
	return
