
;/////////////////////////////////////////////////////////
;//
;//　このソースはEasy3DForHSP3のサンプルを編集したものです。
;//
;//  矢印キーで、注視点を周りに回転します。
;//  Shift + 矢印キーで、視点と注視点が、平行移動(画面に対して平行に)します。
;//  Z, Xキーで、注視点に接近したり、遠ざかったりします。
;//
;//////////////////////////////////////////////////////////

	#include "e3dhsp3.as"


	#module
	#deffunc waitbyfps int p1, var fps
		E3DWaitbyFPS@ p1, fps
		await 0
		return
	#global
	


	dim keybuf, 256
	

	;file のpath 用のバッファーの作成
	pathlen = 2048
	sdim mediadir, pathlen
	mediadir = dir_cur + "\\Media"
	sdim pathbuf, pathlen, 2
	sdim cur_dir, 512
	cur_dir = dir_cur


	scr_x = 800 : scr_y = 600
	scr_x = 640 : scr_y = 480
	screen 0, scr_x, scr_y, 1, (ginfo_dispx - scr_x) / 2, (ginfo_dispy-scr_y) / 2 : title "境界球"
	mouse (ginfo_dispx - scr_x) / 2 + scr_x, (ginfo_dispy - scr_y) / 2
	onexit *bye

	;初期化
	E3DInit 0, -1, 0, 16, 0, scid1

	;projectionの変更をしたいときは、以下の２行を有効にしてください。
	proj_near = 100.0 : proj_far = 30000.0 : proj_fov = 60.0
	E3DSetProjection proj_near, proj_far, proj_fov

	;スプライト作成
	E3DCreateSprite mediadir + "\\point.bmp", 0, spriteid(0)
	sprite_scalex(0) = 1.0 : sprite_scaley(0) = 1.0
	E3DSetSpriteARGB spriteID(0), 255, 255, 0, 0

	//モデル用の変数
	dim hsid,100 : dim motid,100

	start = 0
	gosub *select
	start = 1

	//境界球読み込み
	E3DLoadMQOFileAsGround  mediadir + "\\kyuu.mqo", 1.0, hsid(1), 0
	E3DSetAlpha2 hsid(1), 0.5, -1, 1

	;境界立方体読み込み
	E3DLoadMQOFileAsGround mediadir + "\\box.mqo", 1.0, hsid(2), 0
	E3DSetAlpha2 hsid(2), 0.5, -1, 1

	//ライトの作成
	lightdirx1 = 0.0
	lightdiry1 = 0.0
	lightdirz1 = -1.0
	lightr1 = 255
	lightg1 = 255
	lightb1 = 255

	E3DCreateLight lid1
	E3DSetDirectionalLight lid1, lightdirx1, lightdiry1, lightdirz1, lightr1, lightg1, lightb1

	;カメラの初期化
	eye_y = 1500.0
	camposx = 0.0 : camposy = eye_y : camposz = -5000.0
	E3DSetCameraPos camposx, camposy, camposz	
	camdegxz = 180.0 : camdegy = 0.0
	E3DSetCameraDeg camdegxz, camdegy
	targetx = 0.0
	targety = eye_y
	targetz = 0.0
	cameradist = 5000.0
	E3DCreateQ camq
	E3DCreateQ invcamq

	;日本語表示のためにゴシックフォントを使用します。
	E3DCreateFont 15, 0, 400, 0, 0, 0, "ＭＳ ゴシック", fontid1

	chkfps1 = 0

*main
	; keybuf変数は、メインループの外で、dim keybuf, 256 として、確保しておいてください。
	E3DGetKeyboardState keybuf

	if keybuf.VK_ESCAPE = 1 : goto *bye ; [ESC]で終了

	gosub *MoveCamera

	E3DSetNewPose hsid.0, frameno1

	E3DBeginScene scid1
	
		E3DChkInView scid1, hsid.0
		E3DChkInView scid1, hsid.1
		E3DChkInView scid1, hsid.2

		;境界球
		if doigetnum > 0 {
			E3DGetBSphere hsid(0), doinfobuf.DOI_SERIAL.partcnt, centerx, centery, centerz, centerr
			E3DSetPos hsid(1), centerx, centery, centerz
			E3DSetScale hsid(1), -1, centerr / 100.0, centerr / 100.0, centerr / 100.0, 1
			part ++ : if part = 50 : part = 0 : partcnt ++ : if partcnt = doigetnum : partcnt = 0
		}

		;バウンダリーボックス
		E3DGetBBox hsid(0), doinfobuf.DOI_SERIAL.partcnt, 0, minx, maxx, miny, maxy, minz, maxz
		E3DGetBSphere hsid(0), doinfobuf.DOI_SERIAL.partcnt, centerx, centery, centerz, centerr
		sizex = maxx - minx : sizey = maxy - miny : sizez = maxz - minz
		E3DSetPos hsid(2), centerx, centery, centerz
		E3DGetDirQ hsid(0), qx, qy, qz, qw
		E3DSetDirQ hsid(2), qx, qy, qz, qw
		E3DSetScale hsid(2), -1, sizex / 100.0, sizey / 100.0, sizez / 100.0, 1

		;不透明部分の描画をする
		E3DRender scid1, hsid.0, 0, frameno1, 0
		if view_mode = 0 : E3DRender scid1, hsid.1, 0, frameno1, 0
		if view_mode = 1 : E3DRender scid1, hsid.2, 0, frameno1, 0

		;半透明部分の描画をする
		E3DRender scid1, hsid.0, 1, frameno1, 0, 0, 0, 1
		if view_mode = 0 : E3DRender scid1, hsid.1, 1, frameno1, 0, 0, 0, 1
		if view_mode = 1 : E3DRender scid1, hsid.2, 1, frameno1, 0, 0, 0, 1
		
	gosub *DrawText
	
	;スプライトの描画
	E3DBeginSprite

		;ボーン
		repeat jigetnum
			E3DGetBonePos hsid(0), infobuf(JI_SERIAL, cnt), 1, motid.0, frameno1, posx(0), posy(0), posz(0), 0
			E3DGetScreenPos2 scid1, posx(0), posy(0), posz(0), posx(0), posy(0), validflag
			if validflag ! 0 : E3DRenderSprite spriteID(0), sprite_scalex(0), sprite_scaley(0), posx(0), posy(0), 0.0
		loop

	;スプライトの描画終了
	E3DEndSprite

	E3DEndScene
	
	E3DPresent scid1
	
	waitbyfps 60, chkfps1

	;境界球とバウンダリーボックスの切り替え
	if keybuf(VK_LBUTTON) = 0 : view_flag = 0
	if keybuf(VK_LBUTTON) = 1 & view_flag = 0 {
		view_flag = 1
		switch view_mode
			case 0 : view_mode = 1 : swbreak
			case 1 : view_mode = 0 : swbreak
		swend
	}
	if keybuf(VK_RBUTTON) = 1 : gosub *select

	goto *main


*select

	//形状モデルの読み込み
	if start = 0 : pathbuf.0 = mediadir + "\\bbs_bone1_red2.sig"
	if start = 1 : dialog "sig", 16 : if stat ! 1 : return
	if start = 1 : pathbuf.0 = refstr
	E3DSigLoad pathbuf.0, hsid.0
	E3DGetJointNum hsid.0, jointnum

	;表示オブジェクトの情報を取得
	E3DGetDispObjNum hsid(0), dispobjnum
	sdim donamebuf, 256, dispobjnum
	dim doinfobuf, DOI_MAX, dispobjnum
	doigetnum = 0
	E3DGetDispObjInfo hsid(0), dispobjnum, donamebuf, doinfobuf, doigetnum

	;ジョイントの情報を取得
	E3DGetJointNum hsid(0), jointnum
	sdim jnamebuf, 256, jointnum
	dim infobuf, JI_MAX, jointnum
	jigetnum = 0
	E3DGetJointInfo hsid(0), jointnum, jnamebuf, infobuf, jigetnum

	partcnt = 0

	//モーションの読み込み
	if jointnum ! 0 {
		if start = 0 : stt = 1
		if start = 1 : dialog "qua", 16 : stt = stat
		if stt = 1 {
			if start = 0 : pathbuf.0 = mediadir + "\\bbs_idle.qua"
			if start = 1 : pathbuf.0 = refstr
			E3DAddMotion hsid.0, pathbuf.0, motid.0, framemax(0)
			E3DSetMotionKind hsid.0, motid.0
		}
		if stt ! 1 {
			pathbuf.0 = mediadir + "\\dummy.qua"
			E3DAddMotion hsid.0, pathbuf.0, motid.0, framemax(0)
			E3DSetMotionKind hsid.0, motid.0
		}
	}

	E3DSetPos hsid.0, 0.0, 0.0, 0.0
	E3DSetDir hsid.0, 0.0, 180.0, 0.0

	return


*bye
	E3DBye
	chdir cur_dir
	exist "hsptmp" : if strsize!-1 : delete "hsptmp"
	exist "obj" : if strsize!-1 : delete "obj"
	end


*DrawText

	textposx = 10 : textposy = 10
	textr = 255 : textg = 255 : textb = 255
	textscale = 1

	str5 = "右クリックで形状モデルやモーションの読み込み"
	E3DDrawTextByFontID scid1, fontid1, textposx, textposy, str5, 255, 255, 0, 255

	textposy += 15
	str5 = "左クリックで境界球と"
	E3DDrawTextByFontID scid1, fontid1, textposx, textposy, str5, 255, 255, 0, 255

	textposy += 15
	str5 = "バウンダリーボックスの切り替え"
	E3DDrawTextByFontID scid1, fontid1, textposx, textposy, str5, 255, 255, 0, 255

	textposy += 15 * 2
	str5 = "fps  " + chkfps1
	E3DDrawTextByFontID scid1, fontid1, textposx, textposy, str5, 255, 255, 0, 255

	textposy += 15 * 2
	if view_mode = 0 : str5 = "境界球"
	if view_mode = 1 : str5 = "バウンダリーボックス"
	E3DDrawTextByFontID scid1, fontid1, textposx, textposy, str5, 255, 255, 0, 255

	textposy += 15
	str5 = "表示パーツ  " + donamebuf.partcnt
	E3DDrawTextByFontID scid1, fontid1, textposx, textposy, str5, 255, 255, 0, 255

/*	textposy += 15
	repeat doigetnum
		textposy += 15
		str6 = "No." + doinfobuf.DOI_SERIAL.cnt + " " + donamebuf.cnt; + " notuse " + doinfobuf.DOI_NOTUSE.getno + " dispswitch " + doinfobuf.DOI_DISPSWITCH.getno + " invisible " + doinfobuf.DOI_INVISIBLE.getno
		E3DDrawTextByFontID scid1, fontid1, textposx, textposy, str6, 255, 255, 0, 255
	loop

	textposy += 15

	repeat jigetnum
		textposy += 15
		str6 = "No." + infobuf.JI_SERIAL.cnt + " " + jnamebuf.cnt; + " notuse " + infobuf.JI_NOTUSE.getno + " parent " + infobuf.JI_PARENT.getno + " child " + infobuf.JI_CHILD.getno + " brother " + infobuf.JI_BROTHER.getno + " sister " + infobuf.JI_SISTER.getno
		E3DDrawTextByFontID scid1, fontid1, textposx, textposy, str6, 255, 255, 0, 255
	loop
*/
	return


*MoveCamera

	; VK_　が頭につく、定数の詳細は、e3dhsp_vk.as をご覧ください。
	; keybuf は、GetKeyboardState 命令で、セットされます。

	k=0
	if keybuf.VK_LEFT = 1 : k+=1 ; 矢印左
	if keybuf.VK_UP = 1 : k+=2 ; 矢印上
	if keybuf.VK_RIGHT = 1 : k+=4 ; 矢印右
	if keybuf.VK_DOWN = 1 : k+=8 ; 矢印下
	if keybuf.VK_SHIFT = 1 : k+= 16


	shift = 20.0
	deg = 2.0

	if ( k&16 ) {
		
		if( k&1 ){
			//左平行移動
			deg = camdegxz + 90.0
			E3DSin deg, shiftx
			E3DCos deg, shiftz
			targetx += shiftx * shift
			targetz -= shiftz * shift
		}
		if( k&4 ){	
			//右平行移動
			deg = camdegxz - 90.0
			E3DSin deg, shiftx
			E3DCos deg, shiftz
			targetx += shiftx * shift
			targetz -= shiftz * shift						
		}
		if( k&2 ){
			//上平行移動
			E3DGetCameraQ camq
			E3DInvQ camq, invcamq
			E3DMultQVec invcamq, 0.0, shift, 0.0, shiftx, shifty, shiftz
			targetx += shiftx
			targety += shifty
			targetz += shiftz
			eye_y = targety						
		}
		if( k&8 ){
			//下平行移動
			E3DGetCameraQ camq
			E3DInvQ camq, invcamq
			E3DMultQVec invcamq, 0.0, -shift, 0.0, shiftx, shifty, shiftz
			targetx += shiftx
			targety += shifty
			targetz += shiftz						
			eye_y = targety
		}
	}
	else { 
		//左右回転
		if k&1 : camdegxz += deg
		if k&4 : camdegxz -= deg
		if( camdegxz > 360.0 ){
			camdegxz -= 360.0
		}
		if( camdegxz < 0.0 ) {
			camdegxz += 360.0
		}

		//上下回転
		if k&2 : camdegy += deg
		if k&8 : camdegy -= deg
		if( camdegy >= 90.0 ){
			camdegy = 89.0
		}
		if( camdegy <= -90.0 ){
			camdegy = -89.0
		}
	}

	if( keybuf.'Z' == 1 ){
		cameradist -= 100.0
		if( cameradist < 500.0 ){
			cameradist = 500.0
		}
	}
	if( keybuf.'X' == 1 ){
		cameradist += 100.0
	}

//targetの場所と角度から、カメラの位置を計算する
	E3DSin camdegxz, sinxz
	E3DCos camdegxz, cosxz
	E3DSin camdegy, siny
	E3DCos camdegy, cosy

	camposx = sinxz * cosy * cameradist + targetx
	camposy = eye_y + siny * cameradist
	camposz = -cosxz * cosy * cameradist + targetz

	E3DSetCameraPos camposx, camposy, camposz	
	E3DSetCameraTarget targetx, targety, targetz, 0.0, 1.0, 0.0

	return
